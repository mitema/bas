version: "3.5"

volumes:
  redis_data:
  postgres_data_prod:

networks:
  bas_prod_network:
    name: bas_prod_network

services:
  redis:
    image: redis
    container_name: redis_prod
    expose:
      - 6379
    command: [ 'redis-server', '--appendonly', 'yes' ]
    volumes:
      - redis_data:/data
    networks:
      - bas_prod_network

  postgres:
    image: postgres
    restart: unless-stopped
    container_name: postgres_prod
    expose:
      - 5432
    env_file:
      - .env.dev.postgres
    volumes:
      - ./postgres-init-db.sh:/docker-entrypoint-initdb.d/postgres-init-db.sh
      - postgres_data_prod/:/var/lib/postgresql/data
    networks:
      - bas_prod_network


  adminer:
    image: adminer
    container_name: adminer_prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - bas_prod_network

# TODO containerize celery worker

  flask_backend:
    container_name: bas_backend
    image: bas_backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:1@postgres_prod:5432/bas
      - CELERY_BROKER_URL=redis://redis_prod:6379/0
      - CELERY_RESULT_BACKEND=redis://redis_prod:6379/0
    expose:
      - 5000
    networks:
      - bas_prod_network



  frontend:
    container_name: bas_frontend
    image: bas_frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "80:3000"
    networks:
      - bas_prod_network







